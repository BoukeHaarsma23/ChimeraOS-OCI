name: Build packages
on:
  push:
    branches: [ 
      unstable,
      testing,
      stable,
      main ]
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'
env:
 IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
 BUILDER_TAG: ghcr.io/boukehaarsma23/chimeraos-builder:main
 IMAGE_NAME: chimeraos-oci

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:     
  build:
    if: github.event_name != 'pull_request'
    name: Build System
    runs-on: ubuntu-latest
    strategy:
      matrix:
          variant: ["", -nvidia, -git]
    steps:
      - uses: actions/checkout@v4
      - name: Populate version numbers
        id: version
        run: |
          source ./manifest
          echo "SYSTEM_NAME=`echo ${SYSTEM_NAME}`" >> $GITHUB_ENV
          echo "VERSION=`echo ${VERSION}`" >> $GITHUB_ENV
          echo "SHA_HEAD_SHORT=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
          docker pull ${{ env.BUILDER_TAG }}
          echo "SHA_BUILDER=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.BUILDER_TAG }})" >> $GITHUB_ENV
      - name: Maximize build space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/java
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf /opt/az
          df -h
      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Generate tags
        id: tags
        run: |
          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"
          COMMIT_TAGS=()
          BUILD_TAGS=()

          if [[ ${{ github.ref_name }} == "main" ]]; then
             BUILD_TAGS=("unstable${{ matrix.variant }}" "unstable${{ matrix.variant }}-${TIMESTAMP}" "${{ env.VERSION }}${{ matrix.variant }}")
             echo "DEFAULT_TAG=unstable${{ matrix.variant }}" >> $GITHUB_ENV
          elif [[ ${{ github.ref_name }} == "testing" ]]; then
             BUILD_TAGS=("testing${{ matrix.variant }}" "testing${{ matrix.variant }}-${TIMESTAMP}" "${{ env.VERSION }}${{ matrix.variant }}")
             echo "DEFAULT_TAG=testing${{ matrix.variant }}" >> $GITHUB_ENV
          else
             BUILD_TAGS+=("latest" "stable${{ matrix.variant }}" "${{ env.VERSION }}${{ matrix.variant }}")
             echo "DEFAULT_TAG=latest" >> $GITHUB_ENV
          fi

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Generated the following commit tags: "
              for TAG in "${COMMIT_TAGS[@]}"; do
                  echo "${TAG}"
              done
              alias_tags=("${COMMIT_TAGS[@]}")
          else
              alias_tags=("${BUILD_TAGS[@]}")
          fi
          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      # Build image using Buildah action
      - name: Build Image
        uses: Wandalen/wretry.action@v3.5.0
        id: build_image
        with:
          action: redhat-actions/buildah-build@v2
          attempt_limit: 5
          attempt_delay: 15000
          with: |
            containerfiles: ./Containerfile
            image: ${{ env.IMAGE_NAME }}
            tags: |
              ${{ steps.tags.outputs.alias_tags }}
            build-args: |
              SHA=${{ env.SHA_HEAD_SHORT }}
              VARIANT=${{ matrix.variant }}
            labels: |
              org.opencontainers.image.title=${{ env.IMAGE_NAME }}
              org.opencontainers.image.description=Gaming
              frzr.image.version=${{ env.SYSTEM_NAME }}-${{ env.VERSION }}_${{ env.SHA_HEAD_SHORT }}
              frzr.builder=${{ env.SHA_BUILDER }}
            extra-args: |
              --isolation chroot
    
      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: Wandalen/wretry.action@v3.5.0
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          action: redhat-actions/push-to-registry@v2
          attempt_limit: 3
          attempt_delay: 15000
          with: |
            image: ${{ env.IMAGE_NAME }}
            tags: ${{ steps.tags.outputs.alias_tags }}
            registry: ${{ steps.registry_case.outputs.lowercase }}
            username: ${{ env.REGISTRY_USER }}
            password: ${{ env.REGISTRY_PASSWORD }}
            extra-args: |
              --disable-content-trust